# Copyright (c) 2013, 2015 Ruslan Baratov
# All rights reserved.

cmake_minimum_required(VERSION 3.0)
project(Hunter)

include(ExternalProject) # ExternalProject_Add

# Scheme for download and install OpenSSL library

list(APPEND CMAKE_MODULE_PATH "@HUNTER_SELF@/cmake/modules")

include(hunter_dump_cmake_flags)
include(hunter_pick_archiver)
include(hunter_status_debug)
include(hunter_assert_not_empty_string)
include(hunter_user_error)

hunter_status_debug("Scheme: url_sha1_openssl_emscripten")

# Check preconditions
hunter_assert_not_empty_string("@HUNTER_SELF@")
hunter_assert_not_empty_string("@HUNTER_EP_NAME@")
hunter_assert_not_empty_string("@HUNTER_PACKAGE_URL@")
hunter_assert_not_empty_string("@HUNTER_PACKAGE_SHA1@")
hunter_assert_not_empty_string("@HUNTER_PACKAGE_DOWNLOAD_DIR@")
hunter_assert_not_empty_string("@HUNTER_PACKAGE_SOURCE_DIR@")
hunter_assert_not_empty_string("@HUNTER_PACKAGE_INSTALL_PREFIX@")
hunter_assert_not_empty_string("@HUNTER_PACKAGE_LICENSE_DIR@")
hunter_assert_not_empty_string("@HUNTER_GLOBAL_SCRIPT_DIR@")
hunter_assert_not_empty_string("@HUNTER_TLS_VERIFY@")

set(skip_includes SKIP_INCLUDES)

hunter_dump_cmake_flags(${skip_includes})
# -> CMAKE_CXX_FLAGS
# -> CMAKE_C_FLAGS

if (NOT EMSCRIPTEN)
  message(FATAL_ERROR "NOT EMSCRIPTEN")
endif ()

# TODO: default options
if (NOT OPENSSL_CONFIGURE)
  message(FATAL_ERROR "NOT OPENSSL_CONFIGURE")
endif ()
set(configure_opts ${OPENSSL_CONFIGURE})

string(REGEX REPLACE "^ " "" CMAKE_C_FLAGS "${CMAKE_C_FLAGS}")

# Pass C flags through
set(configure_opts ${configure_opts} ${CMAKE_C_FLAGS})

set(
    configure_command
    emconfigure sh -c "unset CROSS_COMPILE && $@" -- ./Configure
)
set(build_command . "@HUNTER_GLOBAL_SCRIPT_DIR@/clear-all.sh" && make)

hunter_status_debug("Configure command: ${configure_command}")
hunter_status_debug("Configure options: ${configure_opts}")

ExternalProject_Add(
    "@HUNTER_EP_NAME@"
    URL
    @HUNTER_PACKAGE_URL@
    URL_HASH
    SHA1=@HUNTER_PACKAGE_SHA1@
    DOWNLOAD_DIR
    "@HUNTER_PACKAGE_DOWNLOAD_DIR@"
    TLS_VERIFY
    "@HUNTER_TLS_VERIFY@"
    SOURCE_DIR
    "@HUNTER_PACKAGE_SOURCE_DIR@"
    INSTALL_DIR
    "@HUNTER_PACKAGE_INSTALL_PREFIX@"
        # not used, just avoid creating Install/<name> empty directory
    CONFIGURE_COMMAND
    ${configure_command}
    ${configure_opts}
    "--prefix=@HUNTER_PACKAGE_INSTALL_PREFIX@"
    BUILD_COMMAND
    ${build_command}
    BUILD_IN_SOURCE
    1
    INSTALL_COMMAND
    make install_sw
    # Install without documentation
    # * https://github.com/openssl/openssl/issues/57
    COMMAND # Copy license files
    "@CMAKE_COMMAND@"
    "-C@HUNTER_ARGS_FILE@" # for 'HUNTER_INSTALL_LICENSE_FILES'
    "-Dsrcdir=@HUNTER_PACKAGE_SOURCE_DIR@"
    "-Ddstdir=@HUNTER_PACKAGE_LICENSE_DIR@"
    -P
    "@HUNTER_SELF@/scripts/try-copy-license.cmake"
)
