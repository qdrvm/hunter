### Input params check
cmake_minimum_required(VERSION 3.0)

string(COMPARE EQUAL "@global_install_dir@" "" is_empty)
if(is_empty)
  message(FATAL_ERROR "global_install_dir is empty")
endif()

string(COMPARE EQUAL "@local_install_dir@" "" is_empty)
if(is_empty)
  message(FATAL_ERROR "local_install_dir is empty")
endif()

string(COMPARE EQUAL "@llvm_project_component@" "" is_empty)
if(is_empty)
  message(FATAL_ERROR "llvm_project_component is empty")
endif()

string(COMPARE EQUAL "@hunter_self@" "" is_empty)
if(is_empty)
  message(FATAL_ERROR "hunter_self is empty")
endif()

string(COMPARE EQUAL "@llvm_project_source_dir@" "" is_empty)
if(is_empty)
  message(FATAL_ERROR "llvm_project_source_dir is empty")
endif()

string(COMPARE EQUAL "@HUNTER_LLVM_PROJECT_VERSION@" "" is_empty)
if(is_empty)
  message(FATAL_ERROR "HUNTER_LLVM_PROJECT_VERSION is empty")
endif()

### -- end

list(APPEND CMAKE_MODULE_PATH "@hunter_self@/cmake/modules")

include(hunter_generate_llvm_project_info)

hunter_generate_llvm_project_info(
    "@llvm_project_component@"
    components_toskip
    depends_on
    nobuild_list
    "@HUNTER_LLVM_PROJECT_VERSION@"
    "@ANDROID@"
    "@WIN32@"
)

set(LLVM_PROJECT_INSTALLED_FILES "")
foreach(deps ${depends_on})
  list(FIND nobuild_list "${deps}" result)
  if(result EQUAL -1)
    set(list_file "@global_install_dir@/${deps}_installed_files.cmake")
    if(NOT EXISTS "${list_file}")
      message(FATAL_ERROR "File not found: ${list_file}")
    endif()
    include("${list_file}")
    string(COMPARE EQUAL "${LLVM_PROJECT_INSTALLED_FILES}" "" is_empty)
    if(is_empty)
      message(FATAL_ERROR "Empty list in file ${list_file}")
    endif()
  endif()
endforeach()

include("@hunter_self@/scripts/clear-all.cmake")

set(ENV{ANDROID_API_VERSION} "@ANDROID_API_VERSION@") # used by `make install`

function(patch_broken_android_makefile makefile_path_relative)
  set(makefile_path "@llvm_project_source_dir@/${makefile_path_relative}")
  if(EXISTS "${makefile_path}")
    message("Patching: ${makefile_path}")
  else()
    # Some files may be missing
    return()
  endif()

  file(READ "${makefile_path}" makefile_content)
  message("-- Makefile begin (original) --")
  message("${makefile_content}")
  message("-- Makefile end (original) --")
  string(
      REPLACE
      "\$(INSTALL_ROOT)"
      "@local_install_dir@"
      makefile_content
      "${makefile_content}"
  )
  message("-- Makefile begin (patched) --")
  message("${makefile_content}")
  message("-- Makefile end (patched) --")

  file(WRITE "${makefile_path}" "${makefile_content}")
endfunction()

if("@MSVC@")
  execute_process(COMMAND nmake install RESULT_VARIABLE result)
elseif("@MINGW@")
  execute_process(COMMAND mingw32-make install RESULT_VARIABLE result)
else()
  execute_process(COMMAND make install RESULT_VARIABLE result)
endif()

if(NOT result EQUAL 0)
  message(FATAL_ERROR "LLVM-Project install failed: ${result}")
endif()

# Remove files installed by other components
foreach(installed_file ${LLVM_PROJECT_INSTALLED_FILES})
  set(filepath "@local_install_dir@/${installed_file}")
  if(EXISTS "${filepath}")
    file(REMOVE "${filepath}")
    if(EXISTS "${filepath}")
      message(FATAL_ERROR "File not removed: ${filepath}")
    endif()
  endif()
endforeach()

# Save list of files installed by this component
file(
    GLOB_RECURSE
    installed_files
    RELATIVE "@local_install_dir@"
    "@local_install_dir@/*"
)
set(LLVM_PROJECT_INSTALLED_FILES)
foreach(filepath ${installed_files})
  if(NOT EXISTS "@local_install_dir@/${filepath}")
    message(FATAL_ERROR "Internal error")
  endif()

  if(IS_DIRECTORY "@local_install_dir@/${filepath}")
    # not need to save directories
  else()
    list(APPEND LLVM_PROJECT_INSTALLED_FILES "${filepath}")
  endif()
endforeach()

string(COMPARE EQUAL "${LLVM_PROJECT_INSTALLED_FILES}" "" is_empty)
if(is_empty)
  message(FATAL_ERROR "Empty list for directory: @local_install_dir@")
endif()
file(
    WRITE
    "@local_install_dir@/@llvm_project_component@_installed_files.cmake"
    "list(APPEND LLVM_PROJECT_INSTALLED_FILES ${LLVM_PROJECT_INSTALLED_FILES})\n"
)
